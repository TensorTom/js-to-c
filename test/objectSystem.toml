["constructors"]

example = """
function A(name) {
  this.name = name;
}

var a = new A('a');
var b = new A('b');

console.log(a.name);
console.log(b.name);
"""

output = "a\nb"

["constructors and prototypes"]

example = """
function A() {}

A.prototype = {
  data: 12,  
};

var a = new A;

console.log(a.data);
"""

output = "12.000000"

["function prototype property"]

example = """
function A() {}
console.log(typeof A.prototype);
"""

output = "object"

["new operator returns non primitive"]

example = """
function A() {
    return { testKey: "testValue" }
}

var a = new A;

console.log(a.testKey);
"""

output = "testValue"

["assignment"]

example = """
function getQux() {
  return "qux"
}
var a = {};
a.foo = "foo"
a.bar = getQux();
a.bar = "bar"

console.log(a.foo);
console.log(a.bar);
"""

output = "foo\nbar"
